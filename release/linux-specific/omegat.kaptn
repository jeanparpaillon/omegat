#!/usr/bin/kaptain

# Last modified 2012-04-08
# To use, install kaptain, then launch with:
# kaptain ./omegat.kaptn
# Documentation at kaptain.sourceforge.net/kaptain.html

# Launch command

start:framed:double "OmegaT Launcher" -> java " -jar " " -Duser.language=" UIlang " -Duser.country=" country " " " -Dhttp.proxyHost=" proxyhost " -Dhttp.proxyPort=" proxyport "-Xmx" mem "M" " -Dgoogle.api.key=" gt " " omtjarfile " " projectdir " --config-dir=" configdir " --ITokenizer=" SLtoken " --ITokenizerTarget=" TLtoken @exec(start)="OK (starts OmegaT and closes)" @close="Cancel" ;

# Selection of the Java runtime environment
# The current default assumes that you have used the linux-install.sh installation
# script and are using a local version of the JRE (i.e. you have installed 
# "OmegaT with JRE").
# If you are using a system-wide version of Java that is in your execution
# path, replace "../jre/bin/java" with "java".
# If you are using a system-wide version of Java that is NOT in your execution
# path, replace "../jre/bin/java" with the full path of your java executable 
# (in quotes).

java "Java runtime environment" -> @infile("java")="../jre/bin/java" ;

# Selection of the OmegaT.jar file (OmegaT version)
# To make a particular OmegaT.jar file the default, replace ="OmegaT.jar"
# with ="<full path of OmegaT.jar file>"

omtjarfile "Location of OmegaT.jar" -> @infile("OmegaT.jar")="OmegaT.jar" ;

# Selection of the user interface language
# Add language codes (that OmegaT has) or delete them.
# The first one on the list becomes the default

UIlang "User interface language (nn)" -> @combow("en", "ca", "de", "es", "eu", "fr", "hu", "it", "pl", "pt", "ru", "zh") ;

# Selection of the user country

country "User country (NN)" -> @string(2) ;

# Assign (more) memory to OmegaT
# Edit "1028", "2048" to change the options/the default

mem "Assign memory to OmegaT (in Megabtyes)" -> @combow("1028", "2048") ;

# Enter proxy host IP address

proxyhost "IP address of your proxy server, if your system uses a proxy" -> @string ;

# Proxy Server Port Number
proxyport "Port number used by your system to access the proxy server" -> @string ;

# Google Translate API key

gt "Google Translate API key" -> @password ;

# Open a specific project at launch
# Not really necessary unless you want to use OmegaT in console mode
# (in which case you will also want to add other options)

projectdir "Open specified project immediately" -> @directory ;

# Specify non-default configuration files
configdir "Path to directory containing non-default configuration files" -> @directory ;

# Select source-language tokenizer
# Default is none, insert a preferred default between the first quotes

SLtoken "Select SL tokenizer" -> @combow("", "org.omegat.plugins.tokenizer.LuceneArabicTokenizer", "org.omegat.plugins.tokenizer.LuceneBrazilianTokenizer", "org.omegat.plugins.tokenizer.LuceneChineseTokenizer", "org.omegat.plugins.tokenizer.LuceneCJKTokenizer", "org.omegat.plugins.tokenizer.LuceneCzechTokenizer", "org.omegat.plugins.tokenizer.LuceneDutchTokenizer", "org.omegat.plugins.tokenizer.LuceneFrenchTokenizer", "org.omegat.plugins.tokenizer.LuceneGermanTokenizer", "org.omegat.plugins.tokenizer.LuceneGreekTokenizer", "org.omegat.plugins.tokenizer.LucenePersianTokenizer", "org.omegat.plugins.tokenizer.LuceneSmartChineseTokenizer", "org.omegat.plugins.tokenizer.LuceneRussianTokenizer", "org.omegat.plugins.tokenizer.LuceneThaiTokenizer", "org.omegat.plugins.tokenizer.SnowballDanishTokenizer", "org.omegat.plugins.tokenizer.SnowballDutchTokenizer", "org.omegat.plugins.tokenizer.SnowballEnglishTokenizer", "org.omegat.plugins.tokenizer.SnowballFinnishTokenizer", "org.omegat.plugins.tokenizer.SnowballFrenchTokenizer", "org.omegat.plugins.tokenizer.SnowballGerman2Tokenizer", "org.omegat.plugins.tokenizer.SnowballGermanTokenizer", "org.omegat.plugins.tokenizer.SnowballHungarianTokenizer", "org.omegat.plugins.tokenizer.SnowballItalianTokenizer", "org.omegat.plugins.tokenizer.SnowballNorwegianTokenizer", "org.omegat.plugins.tokenizer.SnowballPorterTokenizer", "org.omegat.plugins.tokenizer.SnowballPortugueseTokenizer", "org.omegat.plugins.tokenizer.SnowballRomanianTokenizer", "org.omegat.plugins.tokenizer.SnowballRussianTokenizer", "org.omegat.plugins.tokenizer.SnowballSpanishTokenizer", "org.omegat.plugins.tokenizer.SnowballSwedishTokenizer", "org.omegat.plugins.tokenizer.SnowballTurkishTokenizer") ;

# Target language tokenizer
# As SL tokenizer

TLtoken "Select TL tokenizer" -> @combow("", "org.omegat.plugins.tokenizer.LuceneArabicTokenizer", "org.omegat.plugins.tokenizer.LuceneBrazilianTokenizer", "org.omegat.plugins.tokenizer.LuceneChineseTokenizer", "org.omegat.plugins.tokenizer.LuceneCJKTokenizer", "org.omegat.plugins.tokenizer.LuceneCzechTokenizer", "org.omegat.plugins.tokenizer.LuceneDutchTokenizer", "org.omegat.plugins.tokenizer.LuceneFrenchTokenizer", "org.omegat.plugins.tokenizer.LuceneGermanTokenizer", "org.omegat.plugins.tokenizer.LuceneGreekTokenizer", "org.omegat.plugins.tokenizer.LucenePersianTokenizer", "org.omegat.plugins.tokenizer.LuceneSmartChineseTokenizer", "org.omegat.plugins.tokenizer.LuceneRussianTokenizer", "org.omegat.plugins.tokenizer.LuceneThaiTokenizer", "org.omegat.plugins.tokenizer.SnowballDanishTokenizer", "org.omegat.plugins.tokenizer.SnowballDutchTokenizer", "org.omegat.plugins.tokenizer.SnowballEnglishTokenizer", "org.omegat.plugins.tokenizer.SnowballFinnishTokenizer", "org.omegat.plugins.tokenizer.SnowballFrenchTokenizer", "org.omegat.plugins.tokenizer.SnowballGerman2Tokenizer", "org.omegat.plugins.tokenizer.SnowballGermanTokenizer", "org.omegat.plugins.tokenizer.SnowballHungarianTokenizer", "org.omegat.plugins.tokenizer.SnowballItalianTokenizer", "org.omegat.plugins.tokenizer.SnowballNorwegianTokenizer", "org.omegat.plugins.tokenizer.SnowballPorterTokenizer", "org.omegat.plugins.tokenizer.SnowballPortugueseTokenizer", "org.omegat.plugins.tokenizer.SnowballRomanianTokenizer", "org.omegat.plugins.tokenizer.SnowballRussianTokenizer", "org.omegat.plugins.tokenizer.SnowballSpanishTokenizer", "org.omegat.plugins.tokenizer.SnowballSwedishTokenizer", "org.omegat.plugins.tokenizer.SnowballTurkishTokenizer") ;

