<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"file:///C:/docbook-xml-4.5/docbookx.dtd">
<chapter id="ch09.segmentation">
  <title>Source segmentation</title>

  <para>Translation memory tools work with textual units called segments.
  <application>OmegaT</application> has 2 ways to segment a text: paragraph segmentation and sentence
  segmentation. In order to select the type of segmentation,
  select <menuchoice><guimenu>Project</guimenu><guimenuitem>Properties...</guimenuitem></menuchoice> from the main menu
  and use the available check box. Note that paragraph segmentation is pretty
  much outdated and that for the majority of projects the sentence
  segmentation is a choice to be preferred. If sentence segmentation has been
  selected, you can setup the rules by selecting 
  		<menuchoice>
<guimenu>Options</guimenu><guimenuitem>Segmentation...</guimenuitem></menuchoice>from the main menu.</para>

  <para>Note that a good part of the development has been spent in developing
  dependable segmentation rules, so in a majority of cases you will not need
  to get involved with writing your own segmentation rules. On the other hand
  this functionality can be very useful in special cases, allowing you to
  translate what needs to be translated without running the danger of
  changing, what needs to stay unchanged.</para>

  <para><emphasis role="bold">Warning! </emphasis>Changing the filters options
  while the project is open, may result in the loss of data. If you change
  segmentation options when a project is open, you will have to reload the
  project for the changes to take effect.</para>

  <para><application>OmegaT</application> uses the following sequence of steps:</para>

  <variablelist>
    <varlistentry>
      <term>Structure level segmentation</term>

      <listitem>
        <para><application>OmegaT</application> first parses the text for structure-level segmentation.
        During this process it is only the structure of the source file that
        is used to produce segments.</para>

        <para>For example, text files may be segmented on line breaks, empty
        lines, or not be segmented at all. Files with formatting
        (OpenOffice.org documents, HTML documents, etc.) are segmented on
        block-level (paragraph) tags. Translatable object attributes in XHTML
        or HTML files can be extracted as separate segments.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term>Sentence level segmentation</term>

      <listitem>
        <para>After segmenting the source file into logical units, <application>OmegaT</application> will
        further segment these blocks into sentences.</para>
      </listitem>
    </varlistentry>
  </variablelist>

  <section id="segmentation.rules">
    <title>Segmentation rules</title>

    <para>The process of segmenting can be pictured as follows: imagine the
    cursor move along the text, one character at a time. For each cursor
    position each rule, consisting of a <emphasis role="bold">Before
    </emphasis>and <emphasis role="bold">After </emphasis>Pattern, is applied
    in the given order to see if the<emphasis role="bold"> Before</emphasis>
    pattern applies for the text on the left and the <emphasis
    role="bold">After</emphasis> pattern to the text on the right of the
    cursor. If the rule matches, the decision on what to do, depends on the
    type of the rule: the program either the program stops the rules
    examination (for a exception rule) or creates a new segment (for the break
    rule).</para>

    <para>The two types of rules behave like follows:</para>

    <variablelist>
      <varlistentry>
        <term>Break rule</term>

        <listitem>
          <para>separates the source text into segments. For example,
          "<emphasis>Did it make sense? I was not sure</emphasis>." should be
          separated in two segments. This means, there should be a break rule
          for "?", for instance when followed by spaces and a capitalized
          word. To define a rule as a break rule, check the Break/Exception
          check box.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term>Exception rule</term>

        <listitem>
          <para>specify what parts of text should NOT be separated. In spite
          of the period, <emphasis>"Mrs. Dalloway "</emphasis> should not be
          separated in two segments, so an exception rule should be
          established for Mrs (and Mr and Dr and prof etc), followed by a
          period. To define a rule as an exception rule, leave the
          Break/Exception check box unchecked.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>The predefined break rules should be sufficient for most European
    languages and Japanese. Given the flexibility you may consider defining
    more exception rules for the language you translate from, to give you more
    meaningful and coherent segments.</para>
  </section>

  <section id="rules.priority">
    <title>Rules priority</title>

    <para>All the segmentation rule sets with a matching Language Pattern are
    applied in the given order of priority, so rules for specific language
    should be higher than default ones. For example, rules for Canadian French
    (FR-CA) should be higher than rules for French (FR.*), and higher than
    Default (.*) ones. Then while translating from Canadian French your
    project will use the rules defined for this language, the rules for
    French, and the Default rules in a correct order.</para>
  </section>

  <section id="creating.new.rule">
    <title>Creating a new rule</title>

    <para>In order to edit or expand an existing set of rules, simply click on
    it in the top table. The rules of the set will appear in the bottom half
    of the window.</para>

    <para>In order to create an empty set of rules for a new language pattern
    click <emphasis role="bold">Add </emphasis>in the upper half of the
    dialog. An empty line will appear at the bottom of the upper table (you
    may have to scroll down to see it). Change the name of the rule set and
    the language pattern. Syntax of the language pattern conforms to regular
    expression syntax. If your set of rules handles a language-country pair,
    we advise you to move it to the top using <emphasis role="bold">Move
    Up</emphasis> button.</para>

    <para>Add the <emphasis role="bold">Before</emphasis> and<emphasis
    role="bold"> After</emphasis> patterns. To check their syntax and their
    applicability, it is advisable to use tools which allow you directly to
    see their effect. See the chapter on Regular expressions about it. A good
    startling point are always the existing rules.</para>
  </section>

  <section id="few.simple.examples">
    <title>Few simple examples</title>

    <informaltable>
      <tgroup cols="4">
	    <colspec align="left" colnum="1" colwidth="200" />
        <colspec align="center" colnum="2" colwidth="60" />
        <colspec align="center" colnum="3" colwidth="60" />
        <colspec align="left" colnum="4" colwidth="200" />

        <thead>
          <row>
            <entry>Intention</entry>

            <entry align="center">Before</entry>

            <entry align="center">After</entry>

            <entry>Note</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>Set a segment after a period ('.') and before a
            space</entry>

            <entry align="center">\.</entry>

            <entry align="center">\s</entry>

            <entry>"\." means the character "." "\s" means any white space
            character</entry>
          </row>

          <row>
            <entry>Do not segment after Mr.</entry>

            <entry align="center">Mr\.</entry>

            <entry align="center">\s</entry>

            <entry>It's an exception rule, so the rule check box must be
            unchecked</entry>
          </row>

          <row>
            <entry>Set a segment after "。" (Japanese period)</entry>

            <entry align="center">。</entry>

            <entry align="center"></entry>

            <entry>Note that <literal>after</literal> is empty</entry>
          </row>

          <row>
            <entry>Do not segment after M. Mr. Mrs. and Ms.</entry>

            <entry align="center">Mr??s??\.</entry>

            <entry align="center">\s</entry>

            <entry>Exception rule - see the use of ? in regular expressions
            (non-greedy identifier)</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </section>
</chapter>
