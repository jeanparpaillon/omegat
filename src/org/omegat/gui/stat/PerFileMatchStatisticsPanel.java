/**************************************************************************
 OmegaT - Computer Assisted Translation (CAT) tool 
          with fuzzy matching, translation memory, keyword search, 
          glossaries, and translation leveraging into updated projects.

 Copyright (C) 2015 Aaron Madlon-Kay
               Home page: http://www.omegat.org/
               Support center: http://groups.yahoo.com/group/OmegaT/

 This file is part of OmegaT.

 OmegaT is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 OmegaT is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **************************************************************************/

package org.omegat.gui.stat;

import javax.swing.SwingUtilities;

/**
 *
 * @author Aaron Madlon-Kay
 */
public class PerFileMatchStatisticsPanel extends BaseMatchStatisticsPanel {

    /**
     * Creates new form PerFileMatchStatisticsPanel
     */
    public PerFileMatchStatisticsPanel(StatisticsWindow window) {
        super(window);
        initComponents();
    }
    
    @Override
    public void appendTable(final String title, final String[] headers, final String[][] data) {
        if (headers == null || headers.length == 0) {
            return;
        }
        if (data == null || data.length == 0) {
            return;
        }
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                tablesPanel.add(generateTableDisplay(title, headers, data));
            }
        });
    }

    @Override
    public void setTable(String[] headers, String[][] data) {
        // Nothing
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablesPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBorder(null);

        tablesPanel.setLayout(new javax.swing.BoxLayout(tablesPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(tablesPanel);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel tablesPanel;
    // End of variables declaration//GEN-END:variables
}
