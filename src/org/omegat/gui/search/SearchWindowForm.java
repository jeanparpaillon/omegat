/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.omegat.gui.search;

import org.omegat.util.OStrings;

/**
 *
 * @author alex
 */
public class SearchWindowForm extends javax.swing.JFrame {

    /**
     * Creates new form SearchWindowForm
     */
    public SearchWindowForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        m_searchLabel = new javax.swing.JLabel();
        m_searchField = new MFindField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_searchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        m_exactSearchRB = new javax.swing.JRadioButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_keywordSearchRB = new javax.swing.JRadioButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_regexpSearchRB = new javax.swing.JRadioButton();
        filler14 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_resultsLabel = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel3 = new javax.swing.JPanel();
        m_caseCB = new javax.swing.JCheckBox();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_searchSourceCB = new javax.swing.JCheckBox();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_searchTargetCB = new javax.swing.JCheckBox();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_searchNotesCB = new javax.swing.JCheckBox();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_cbTranslated = new javax.swing.JCheckBox();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_allResultsCB = new javax.swing.JCheckBox();
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        m_SearchInPane = new javax.swing.JPanel();
        m_cbSearchInMemory = new javax.swing.JCheckBox();
        filler15 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_cbSearchInTMs = new javax.swing.JCheckBox();
        filler16 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_cbSearchInGlossaries = new javax.swing.JCheckBox();
        filler17 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        m_advancedVisiblePane = new javax.swing.JPanel();
        m_authorCB = new javax.swing.JCheckBox();
        m_authorField = new javax.swing.JTextField();
        m_dateFromCB = new javax.swing.JCheckBox();
        m_dateFromButton = new javax.swing.JButton();
        m_dateToCB = new javax.swing.JCheckBox();
        m_dateToButton = new javax.swing.JButton();
        m_numberLabel = new javax.swing.JLabel();
        m_numberOfResults = new javax.swing.JSpinner();
        m_dateFromSpinner = new javax.swing.JSpinner();
        m_dateToSpinner = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        m_advancedButton = new javax.swing.JButton();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jScrollPane1 = new javax.swing.JScrollPane();
        m_viewer = new EntryListPane();
        jPanel8 = new javax.swing.JPanel();
        m_dirLabel = new javax.swing.JLabel();
        m_dirField = new javax.swing.JTextField();
        filler13 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        m_dirButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        m_dirCB = new javax.swing.JCheckBox();
        m_recursiveCB = new javax.swing.JCheckBox();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        m_removeFilterButton = new javax.swing.JButton();
        m_filterButton = new javax.swing.JButton();
        m_dismissButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(OStrings.getString("SW_TITLE")); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(m_searchLabel, OStrings.getString("SW_SEARCH_TEXT")); // NOI18N
        jPanel1.add(m_searchLabel);
        jPanel1.add(m_searchField);
        jPanel1.add(filler1);

        org.openide.awt.Mnemonics.setLocalizedText(m_searchButton, OStrings.getString("BUTTON_SEARCH")); // NOI18N
        jPanel1.add(m_searchButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        buttonGroup1.add(m_exactSearchRB);
        m_exactSearchRB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_exactSearchRB, OStrings.getString("SW_EXACT_SEARCH")); // NOI18N
        jPanel2.add(m_exactSearchRB);
        jPanel2.add(filler3);

        buttonGroup1.add(m_keywordSearchRB);
        org.openide.awt.Mnemonics.setLocalizedText(m_keywordSearchRB, OStrings.getString("SW_WORD_SEARCH")); // NOI18N
        jPanel2.add(m_keywordSearchRB);
        jPanel2.add(filler4);

        buttonGroup1.add(m_regexpSearchRB);
        org.openide.awt.Mnemonics.setLocalizedText(m_regexpSearchRB, OStrings.getString("SW_REGEXP_SEARCH")); // NOI18N
        jPanel2.add(m_regexpSearchRB);
        jPanel2.add(filler14);
        jPanel2.add(m_resultsLabel);
        jPanel2.add(filler2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        m_caseCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_caseCB, OStrings.getString("SW_CASE_SENSITIVE")); // NOI18N
        jPanel3.add(m_caseCB);
        jPanel3.add(filler5);

        m_searchSourceCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_searchSourceCB, OStrings.getString("SW_SEARCH_SOURCE")); // NOI18N
        jPanel3.add(m_searchSourceCB);
        jPanel3.add(filler6);

        m_searchTargetCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_searchTargetCB, OStrings.getString("SW_SEARCH_TARGET")); // NOI18N
        jPanel3.add(m_searchTargetCB);
        jPanel3.add(filler7);

        m_searchNotesCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_searchNotesCB, OStrings.getString("SW_SEARCH_NOTES")); // NOI18N
        jPanel3.add(m_searchNotesCB);
        jPanel3.add(filler8);

        org.openide.awt.Mnemonics.setLocalizedText(m_cbTranslated, OStrings.getString("SW_SEARCH_TRANSLATED")); // NOI18N
        jPanel3.add(m_cbTranslated);
        jPanel3.add(filler9);

        m_allResultsCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_allResultsCB, OStrings.getString("SW_ALL_RESULTS")); // NOI18N
        jPanel3.add(m_allResultsCB);
        jPanel3.add(filler11);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel3, gridBagConstraints);

        m_SearchInPane.setBorder(javax.swing.BorderFactory.createTitledBorder(OStrings.getString("SW_SEARCH_IN_BOX"))); // NOI18N
        m_SearchInPane.setLayout(new javax.swing.BoxLayout(m_SearchInPane, javax.swing.BoxLayout.LINE_AXIS));

        m_cbSearchInMemory.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_cbSearchInMemory, OStrings.getString("SW_SEARCH_IN_MEMORY")); // NOI18N
        m_SearchInPane.add(m_cbSearchInMemory);
        m_SearchInPane.add(filler15);

        m_cbSearchInTMs.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_cbSearchInTMs, OStrings.getString("SW_SEARCH_IN_TMS")); // NOI18N
        m_SearchInPane.add(m_cbSearchInTMs);
        m_SearchInPane.add(filler16);

        m_cbSearchInGlossaries.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_cbSearchInGlossaries, OStrings.getString("SW_SEARCH_IN_GLOSSARIES")); // NOI18N
        m_SearchInPane.add(m_cbSearchInGlossaries);
        m_SearchInPane.add(filler17);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(m_SearchInPane, gridBagConstraints);

        m_advancedVisiblePane.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(m_authorCB, OStrings.getString("SW_AUTHOR")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_authorCB, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_authorField, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(m_dateFromCB, OStrings.getString("SW_CHANGED_AFTER")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_dateFromCB, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(m_dateFromButton, OStrings.getString("SW_NOW")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_dateFromButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(m_dateToCB, OStrings.getString("SW_CHANGED_BEFORE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        m_advancedVisiblePane.add(m_dateToCB, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(m_dateToButton, OStrings.getString("SW_NOW")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        m_advancedVisiblePane.add(m_dateToButton, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(m_numberLabel, OStrings.getString("SW_NUMBER")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_numberLabel, gridBagConstraints);

        m_numberOfResults.setModel(new javax.swing.SpinnerNumberModel());
        m_numberOfResults.setMinimumSize(new java.awt.Dimension(100, 28));
        m_numberOfResults.setPreferredSize(new java.awt.Dimension(100, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        m_advancedVisiblePane.add(m_numberOfResults, gridBagConstraints);

        m_dateFromSpinner.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_dateFromSpinner, gridBagConstraints);

        m_dateToSpinner.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        m_advancedVisiblePane.add(m_dateToSpinner, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        m_advancedVisiblePane.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(m_advancedVisiblePane, gridBagConstraints);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(m_advancedButton, OStrings.getString("SW_ADVANCED_OPTIONS")); // NOI18N
        jPanel4.add(m_advancedButton);
        jPanel4.add(filler10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel4, gridBagConstraints);

        m_viewer.setText(OStrings.getString("SW_VIEWER_TEXT")); // NOI18N
        jScrollPane1.setViewportView(m_viewer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(m_dirLabel, OStrings.getString("SW_LOCATION")); // NOI18N
        jPanel8.add(m_dirLabel);

        m_dirField.setEditable(false);
        jPanel8.add(m_dirField);
        jPanel8.add(filler13);

        org.openide.awt.Mnemonics.setLocalizedText(m_dirButton, OStrings.getString("SW_BROWSE")); // NOI18N
        jPanel8.add(m_dirButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel8, gridBagConstraints);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(m_dirCB, OStrings.getString("SW_DIR_SEARCH")); // NOI18N
        jPanel7.add(m_dirCB);

        m_recursiveCB.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(m_recursiveCB, OStrings.getString("SW_DIR_RECURSIVE")); // NOI18N
        m_recursiveCB.setEnabled(false);
        jPanel7.add(m_recursiveCB);
        jPanel7.add(filler12);

        org.openide.awt.Mnemonics.setLocalizedText(m_removeFilterButton, OStrings.getString("BUTTON_REMOVEFILTER")); // NOI18N
        m_removeFilterButton.setEnabled(false);
        jPanel7.add(m_removeFilterButton);

        org.openide.awt.Mnemonics.setLocalizedText(m_filterButton, OStrings.getString("BUTTON_FILTER")); // NOI18N
        m_filterButton.setEnabled(false);
        jPanel7.add(m_filterButton);

        org.openide.awt.Mnemonics.setLocalizedText(m_dismissButton, OStrings.getString("BUTTON_CLOSE")); // NOI18N
        jPanel7.add(m_dismissButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel7, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchWindowForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SearchWindowForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.ButtonGroup buttonGroup1;
    javax.swing.Box.Filler filler1;
    javax.swing.Box.Filler filler10;
    javax.swing.Box.Filler filler11;
    javax.swing.Box.Filler filler12;
    javax.swing.Box.Filler filler13;
    javax.swing.Box.Filler filler14;
    javax.swing.Box.Filler filler15;
    javax.swing.Box.Filler filler16;
    javax.swing.Box.Filler filler17;
    javax.swing.Box.Filler filler2;
    javax.swing.Box.Filler filler3;
    javax.swing.Box.Filler filler4;
    javax.swing.Box.Filler filler5;
    javax.swing.Box.Filler filler6;
    javax.swing.Box.Filler filler7;
    javax.swing.Box.Filler filler8;
    javax.swing.Box.Filler filler9;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JPanel jPanel4;
    javax.swing.JPanel jPanel6;
    javax.swing.JPanel jPanel7;
    javax.swing.JPanel jPanel8;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JPanel m_SearchInPane;
    javax.swing.JButton m_advancedButton;
    javax.swing.JPanel m_advancedVisiblePane;
    javax.swing.JCheckBox m_allResultsCB;
    javax.swing.JCheckBox m_authorCB;
    javax.swing.JTextField m_authorField;
    javax.swing.JCheckBox m_caseCB;
    javax.swing.JCheckBox m_cbSearchInGlossaries;
    javax.swing.JCheckBox m_cbSearchInMemory;
    javax.swing.JCheckBox m_cbSearchInTMs;
    javax.swing.JCheckBox m_cbTranslated;
    javax.swing.JButton m_dateFromButton;
    javax.swing.JCheckBox m_dateFromCB;
    javax.swing.JSpinner m_dateFromSpinner;
    javax.swing.JButton m_dateToButton;
    javax.swing.JCheckBox m_dateToCB;
    javax.swing.JSpinner m_dateToSpinner;
    javax.swing.JButton m_dirButton;
    javax.swing.JCheckBox m_dirCB;
    javax.swing.JTextField m_dirField;
    javax.swing.JLabel m_dirLabel;
    javax.swing.JButton m_dismissButton;
    javax.swing.JRadioButton m_exactSearchRB;
    javax.swing.JButton m_filterButton;
    javax.swing.JRadioButton m_keywordSearchRB;
    javax.swing.JLabel m_numberLabel;
    javax.swing.JSpinner m_numberOfResults;
    javax.swing.JCheckBox m_recursiveCB;
    javax.swing.JRadioButton m_regexpSearchRB;
    javax.swing.JButton m_removeFilterButton;
    javax.swing.JLabel m_resultsLabel;
    javax.swing.JButton m_searchButton;
    javax.swing.JTextField m_searchField;
    javax.swing.JLabel m_searchLabel;
    javax.swing.JCheckBox m_searchNotesCB;
    javax.swing.JCheckBox m_searchSourceCB;
    javax.swing.JCheckBox m_searchTargetCB;
    javax.swing.JTextPane m_viewer;
    // End of variables declaration//GEN-END:variables
}
