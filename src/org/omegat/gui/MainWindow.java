/**************************************************************************
 OmegaT - Java based Computer Assisted Translation (CAT) tool
 Copyright (C) 2002-2005  Keith Godfrey et al
                          keithgodfrey@users.sourceforge.net
                          907.223.2039

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
**************************************************************************/

package org.omegat.gui;

import java.awt.Image;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.UIManager;

import org.omegat.gui.dialogs.AboutDialog;
import org.omegat.util.StaticUtils;

/**
 * Prototype of the main window
 * for the New single-windowed Window System.
 * Not used currently.
 *
 * @author Maxym Mykhalchuk
 */
public class MainWindow extends javax.swing.JFrame
{
    
    /** Creates new form MainWindow */
    public MainWindow()
    {
        initComponents();
        
        try
        {
            URL resource = getClass().getResource("/org/omegat/gui/resources/omegat-small.gif");
            ImageIcon imageicon = new ImageIcon(resource);
            Image image = imageicon.getImage();
            setIconImage(image);
        }
        catch( Exception e )
        {
            e.printStackTrace(StaticUtils.getLogStream());
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        statusLabel = new javax.swing.JLabel();
        mainMenu = new javax.swing.JMenuBar();
        projectMenu = new javax.swing.JMenu();
        projectNewMenuItem = new javax.swing.JMenuItem();
        projectOpenMenuItem = new javax.swing.JMenuItem();
        projectCloseMenuItem = new javax.swing.JMenuItem();
        projectSaveMenuItem = new javax.swing.JMenuItem();
        separator1inProjectMenu = new javax.swing.JSeparator();
        projectCompileMenuItem = new javax.swing.JMenuItem();
        separator2inProjectMenu = new javax.swing.JSeparator();
        projectExitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        editUndoMenuItem = new javax.swing.JMenuItem();
        editRedoMenuItem = new javax.swing.JMenuItem();
        separator1inEditMenu = new javax.swing.JSeparator();
        editOverwriteTranslationMenuItem = new javax.swing.JMenuItem();
        editInsertTranslationMenuItem = new javax.swing.JMenuItem();
        separator2inEditMenu = new javax.swing.JSeparator();
        editFindMenuItem = new javax.swing.JMenuItem();
        editFindInProjectMenuItem = new javax.swing.JMenuItem();
        separator3inEditMenu = new javax.swing.JSeparator();
        editSelectFuzzy1MenuItem = new javax.swing.JMenuItem();
        editSelectFuzzy2MenuItem = new javax.swing.JMenuItem();
        editSelectFuzzy3MenuItem = new javax.swing.JMenuItem();
        editSelectFuzzy4MenuItem = new javax.swing.JMenuItem();
        editSelectFuzzy5MenuItem = new javax.swing.JMenuItem();
        gotoMenu = new javax.swing.JMenu();
        gotoNextUntranslatedMenuItem = new javax.swing.JMenuItem();
        gotoNextSegmentMenuItem = new javax.swing.JMenuItem();
        gotoPreviousSegmentMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        viewMatchWindowCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        viewFileListCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        toolsMenu = new javax.swing.JMenu();
        toolsValidateTagsMenuItem = new javax.swing.JMenuItem();
        separator1inToolsMenu = new javax.swing.JSeparator();
        toolsFontSelectionMenuItem = new javax.swing.JMenuItem();
        toolsSetupFileFiltersMenuItem = new javax.swing.JMenuItem();
        toolsKeyboardShortcutsMenuItem = new javax.swing.JMenuItem();
        toolsShowMnemonicsCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpContentsMenuItem = new javax.swing.JMenuItem();
        helpAboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OmegaT 1.4.5");
        getContentPane().add(statusLabel, java.awt.BorderLayout.SOUTH);

        org.openide.awt.Mnemonics.setLocalizedText(projectMenu, "&Project");
        org.openide.awt.Mnemonics.setLocalizedText(projectNewMenuItem, "&New");
        projectMenu.add(projectNewMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(projectOpenMenuItem, "&Open");
        projectMenu.add(projectOpenMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(projectCloseMenuItem, "&Close");
        projectMenu.add(projectCloseMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(projectSaveMenuItem, "&Save");
        projectMenu.add(projectSaveMenuItem);

        projectMenu.add(separator1inProjectMenu);

        org.openide.awt.Mnemonics.setLocalizedText(projectCompileMenuItem, "C&ompile");
        projectMenu.add(projectCompileMenuItem);

        projectMenu.add(separator2inProjectMenu);

        org.openide.awt.Mnemonics.setLocalizedText(projectExitMenuItem, "E&xit");
        projectMenu.add(projectExitMenuItem);

        mainMenu.add(projectMenu);

        org.openide.awt.Mnemonics.setLocalizedText(editMenu, "&Edit");
        org.openide.awt.Mnemonics.setLocalizedText(editUndoMenuItem, "&Undo");
        editMenu.add(editUndoMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editRedoMenuItem, "&Redo");
        editMenu.add(editRedoMenuItem);

        editMenu.add(separator1inEditMenu);

        org.openide.awt.Mnemonics.setLocalizedText(editOverwriteTranslationMenuItem, "&Overwrite Translation");
        editMenu.add(editOverwriteTranslationMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editInsertTranslationMenuItem, "&Insert Translation");
        editMenu.add(editInsertTranslationMenuItem);

        editMenu.add(separator2inEditMenu);

        org.openide.awt.Mnemonics.setLocalizedText(editFindMenuItem, "&Find...");
        editMenu.add(editFindMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editFindInProjectMenuItem, "Find in &Project...");
        editMenu.add(editFindInProjectMenuItem);

        editMenu.add(separator3inEditMenu);

        org.openide.awt.Mnemonics.setLocalizedText(editSelectFuzzy1MenuItem, "Select Fuzzy Match #&1");
        editMenu.add(editSelectFuzzy1MenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editSelectFuzzy2MenuItem, "Select Fuzzy Match #&2");
        editMenu.add(editSelectFuzzy2MenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editSelectFuzzy3MenuItem, "Select Fuzzy Match #&3");
        editMenu.add(editSelectFuzzy3MenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editSelectFuzzy4MenuItem, "Select Fuzzy Match #&4");
        editMenu.add(editSelectFuzzy4MenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(editSelectFuzzy5MenuItem, "Select Fuzzy Match #&5");
        editMenu.add(editSelectFuzzy5MenuItem);

        mainMenu.add(editMenu);

        org.openide.awt.Mnemonics.setLocalizedText(gotoMenu, "&Go To");
        org.openide.awt.Mnemonics.setLocalizedText(gotoNextUntranslatedMenuItem, "Next &Untranslated Segment");
        gotoMenu.add(gotoNextUntranslatedMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(gotoNextSegmentMenuItem, "&Next Segment");
        gotoMenu.add(gotoNextSegmentMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(gotoPreviousSegmentMenuItem, "&Previous Segment");
        gotoMenu.add(gotoPreviousSegmentMenuItem);

        mainMenu.add(gotoMenu);

        org.openide.awt.Mnemonics.setLocalizedText(viewMenu, "&View");
        org.openide.awt.Mnemonics.setLocalizedText(viewMatchWindowCheckBoxMenuItem, "&Match Window");
        viewMenu.add(viewMatchWindowCheckBoxMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(viewFileListCheckBoxMenuItem, "&File List");
        viewMenu.add(viewFileListCheckBoxMenuItem);

        mainMenu.add(viewMenu);

        org.openide.awt.Mnemonics.setLocalizedText(toolsMenu, "&Tools");
        org.openide.awt.Mnemonics.setLocalizedText(toolsValidateTagsMenuItem, "&Validate Tags");
        toolsMenu.add(toolsValidateTagsMenuItem);

        toolsMenu.add(separator1inToolsMenu);

        org.openide.awt.Mnemonics.setLocalizedText(toolsFontSelectionMenuItem, "&Font Selection");
        toolsMenu.add(toolsFontSelectionMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(toolsSetupFileFiltersMenuItem, "&Setup File Filters");
        toolsMenu.add(toolsSetupFileFiltersMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(toolsKeyboardShortcutsMenuItem, "&Keyboard Shortcuts");
        toolsMenu.add(toolsKeyboardShortcutsMenuItem);

        toolsShowMnemonicsCheckBoxMenuItem.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(toolsShowMnemonicsCheckBoxMenuItem, "Show &Mnemonics");
        toolsMenu.add(toolsShowMnemonicsCheckBoxMenuItem);

        mainMenu.add(toolsMenu);

        org.openide.awt.Mnemonics.setLocalizedText(helpMenu, "&Help");
        org.openide.awt.Mnemonics.setLocalizedText(helpContentsMenuItem, "&Contents");
        helpMenu.add(helpContentsMenuItem);

        org.openide.awt.Mnemonics.setLocalizedText(helpAboutMenuItem, "&About");
        helpAboutMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                helpAboutMenuItemActionPerformed(evt);
            }
        });

        helpMenu.add(helpAboutMenuItem);

        mainMenu.add(helpMenu);

        setJMenuBar(mainMenu);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void helpAboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpAboutMenuItemActionPerformed
        new AboutDialog(this).setVisible(true);
    }//GEN-LAST:event_helpAboutMenuItemActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        try { UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); } catch( Exception e ) {}
        
        new MainWindow().setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem editFindInProjectMenuItem;
    private javax.swing.JMenuItem editFindMenuItem;
    private javax.swing.JMenuItem editInsertTranslationMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editOverwriteTranslationMenuItem;
    private javax.swing.JMenuItem editRedoMenuItem;
    private javax.swing.JMenuItem editSelectFuzzy1MenuItem;
    private javax.swing.JMenuItem editSelectFuzzy2MenuItem;
    private javax.swing.JMenuItem editSelectFuzzy3MenuItem;
    private javax.swing.JMenuItem editSelectFuzzy4MenuItem;
    private javax.swing.JMenuItem editSelectFuzzy5MenuItem;
    private javax.swing.JMenuItem editUndoMenuItem;
    private javax.swing.JMenu gotoMenu;
    private javax.swing.JMenuItem gotoNextSegmentMenuItem;
    private javax.swing.JMenuItem gotoNextUntranslatedMenuItem;
    private javax.swing.JMenuItem gotoPreviousSegmentMenuItem;
    private javax.swing.JMenuItem helpAboutMenuItem;
    private javax.swing.JMenuItem helpContentsMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JMenuItem projectCloseMenuItem;
    private javax.swing.JMenuItem projectCompileMenuItem;
    private javax.swing.JMenuItem projectExitMenuItem;
    private javax.swing.JMenu projectMenu;
    private javax.swing.JMenuItem projectNewMenuItem;
    private javax.swing.JMenuItem projectOpenMenuItem;
    private javax.swing.JMenuItem projectSaveMenuItem;
    private javax.swing.JSeparator separator1inEditMenu;
    private javax.swing.JSeparator separator1inProjectMenu;
    private javax.swing.JSeparator separator1inToolsMenu;
    private javax.swing.JSeparator separator2inEditMenu;
    private javax.swing.JSeparator separator2inProjectMenu;
    private javax.swing.JSeparator separator3inEditMenu;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JMenuItem toolsFontSelectionMenuItem;
    private javax.swing.JMenuItem toolsKeyboardShortcutsMenuItem;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JMenuItem toolsSetupFileFiltersMenuItem;
    private javax.swing.JCheckBoxMenuItem toolsShowMnemonicsCheckBoxMenuItem;
    private javax.swing.JMenuItem toolsValidateTagsMenuItem;
    private javax.swing.JCheckBoxMenuItem viewFileListCheckBoxMenuItem;
    private javax.swing.JCheckBoxMenuItem viewMatchWindowCheckBoxMenuItem;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
    
}
